name: Build and test VAMPyR

on:
  push:
    branches:
      - master
      - release/*
  pull_request:
    branches:
      - master
      - release/*
  release:
    types:
      - created

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version:
          - "3.8"
          - "3.11"

    steps:
    - uses: actions/checkout@v3

    - name: Cache conda
      uses: actions/cache@v3
      env:
        CACHE_NUMBER: 0  # Increase this value to reset cache if environment.yml has not changed
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ matrix.os }}-${{ matrix.python-version }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}

    - uses: conda-incubator/setup-miniconda@v2
      with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: vampyr-gha
          environment-file: environment.yml
          channel-priority: true
          python-version: ${{ matrix.python-version }}

    - name: Configure
      shell: bash -l {0}
      env:
        CXXFLAGS: ""
      run: |
        cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=$BUILD_TYPE -GNinja -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/Software/VAMPyR -DCMAKE_VERBOSE_MAKEFILE=ON

    - name: Build
      shell: bash -l {0}
      env:
        CXXFLAGS: ""
      run: |
        cmake --build build --config $BUILD_TYPE --target install -- -v -d stats

    - name: Test
      shell: bash -l {0}
      run: |
        cd build
        ctest -C $BUILD_TYPE --output-on-failure --verbose
